volumes:
  lazer:

services:
  postgres:
    image: postgis
    build:
      context: compose
      dockerfile: Dockerfile.postgis
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: pbaabp
      POSTGRES_PASSWORD: pbaabp
      POSTGRES_DB: pbaabp
      POSTGRES_HOST_AUTH_METHOD: trust  # never do this in production!
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "pbaabp", "-d", "pbaabp"]
      interval: 1s

  redis:
    image: redis:7-bookworm
    ports:
      - "6379:6379"
    healthcheck:
     test: ["CMD", "redis-cli","ping"]
     interval: 1s

  base:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: pbaabp:docker-compose
    environment: &base_environment
      DEBUG: "True"
      DATABASE_URL: postgresql://pbaabp:pbaabp@postgres:5432/pbaabp
      DJANGO_READ_DOT_ENV_FILE: "True"
      DJANGO_EMAIL_HOST: "maildev"
      DJANGO_EMAIL_PORT: 1025
      DJANGO_EMAIL_USE_TLS: "False"
      DJANGO_DEFAULT_FROM_EMAIL: "Philly Bike Action <pba@example.com>"
    volumes:
      - &base_volumes
        .:/code

  web:
    image: pbaabp:docker-compose
    command: python manage.py runserver 0.0.0.0:8000
    environment: *base_environment
    volumes:
      - *base_volumes
      - lazer:/code/static/lazer
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  lazer:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: lazer
    command: npx ionic build --baseHref='/laser' --prod --watch
    volumes:
      - *base_volumes
      - lazer:/code/lazer_app/projectLazer/www

  worker:
    image: pbaabp:docker-compose
    command: hupper -m celery -A pbaabp worker --beat -l DEBUG
    environment: *base_environment
    volumes:
      - *base_volumes
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  discord:
    image: pbaabp:docker-compose
    command: python manage.py run_dev_discord
    environment: *base_environment
    volumes:
      - *base_volumes
    stop_signal: SIGINT
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  maildev:
    image: maildev/maildev:2.0.5
    ports:
      - "1080:1080"
      - "1025:1025"
